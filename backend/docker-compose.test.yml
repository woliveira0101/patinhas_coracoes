services:
  test:
    container_name: patinhas-api-test
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres_test:
        condition: service_healthy
      redis_test:
        condition: service_started
    env_file:
      - .env.test
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        until nc -z postgres_test 5432; do
          sleep 1
        done &&
        echo 'PostgreSQL is up!' &&
        echo 'Running tests...' &&
        npm run test
      "

  postgres_test:
    container_name: patinhas-postgres-test
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
    env_file:
      - .env.test
    ports:
      - '5433:5432'
    volumes:
      - ./sql/init-test-db.sh:/docker-entrypoint-initdb.d/0-init-test-db.sh
      - ./sql/schema.test.sql:/docker-entrypoint-initdb.d/1-schema.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis_test:
    container_name: patinhas-redis-test
    image: redis:6
    ports:
      - '6380:6379'
