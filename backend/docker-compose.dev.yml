services:
  api:
    container_name: patinhas-api
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./uploads:/usr/src/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env.development

  postgres:
    container_name: patinhas-postgres
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
    env_file:
      - .env.development
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./sql/inserts.sql:/docker-entrypoint-initdb.d/2-inserts.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: patinhas-redis
    image: redis:6
    ports:
      - '6379:6379'

volumes:
  postgres_dev_data:
